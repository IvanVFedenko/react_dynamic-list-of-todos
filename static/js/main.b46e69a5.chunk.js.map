{"version":3,"sources":["TodoItem.js","User.js","TodoList.js","Get.js","App.js","index.js"],"names":["TodoItem","_ref","todoData","react_default","a","createElement","className","title","completed","User","userData","name","username","TodoList","data","map","element","Fragment","src_User","user","key","id","src_TodoItem","API_URL","getFromServer","Object","asyncToGenerator","regenerator_default","mark","_callee","responseTodos","todos","responseUsers","users","userWithTodo","wrap","_context","prev","next","fetch","concat","sent","json","todo","objectSpread","find","userId","abrupt","stop","apply","this","arguments","App","state","unitedData","isLoaded","isLoading","handleLoad","_this","setState","setTimeout","sortData","event","value","target","sort","b","String","localeCompare","defaultValue","onChange","src_TodoList","type","onClick","disabled","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b46e69a5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Styles/TodoItem.css';\n\nconst TodoItem = ({ todoData }) => (\n  <div className=\"todoitem\">\n    <p className=\"todoitem_title\">\n      {todoData.title}\n    </p>\n    <p className=\"todoitem_status\">\n     {!todoData.completed\n       ? (<span className=\"progress\">\n            IN PROGRESS...\n          </span>\n       ) : <span className=\"done\">\n            DONE!\n          </span>}\n      )\n    </p>\n  </div>\n);\n\nTodoItem.propTypes = {\n  todoData: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Styles/User.css';\n\nconst User = ({ userData }) => (\n  <tr className=\"user\">\n    <td className=\"user_user-name\">{userData.name}</td>\n    <td className=\"user_user-nickname\">\n      (\n      {userData.username}\n      )\n    </td>\n  </tr>\n);\n\nUser.propTypes = {\n  userData: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Styles/TodoList.css';\nimport TodoItem from './TodoItem';\nimport User from './User';\n\nconst TodoList = ({ data }) => (\n  <div className=\"todolist\">\n    <table>\n      <thead>\n        <tr className=\"todolist-table-headline\">\n          <th className=\"td-headline\">name</th>\n          <th className=\"td-headline\">title</th>\n        </tr>\n      </thead>\n      <tbody className=\"todolist-table\">\n        {data.map(element => (\n          <>\n          <User userData={element.user} key={element.user.id} />\n          <TodoItem todoData={element} />\n          </>\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n\nTodoList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","const API_URL = 'https://jsonplaceholder.typicode.com';\n\nconst getFromServer = async() => {\n  const responseTodos = await fetch(`${API_URL}/todos`);\n  const todos = await responseTodos.json();\n\n  const responseUsers = await fetch(`${API_URL}/users`);\n  const users = await responseUsers.json();\n\n  const userWithTodo = todos.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId),\n  })\n  );\n  return userWithTodo;\n};\n\nexport default getFromServer;\n","import React from 'react';\nimport './Styles/App.css';\nimport TodoList from './TodoList';\nimport getFromServer from './Get';\nclass App extends React.Component {\n  state = {\n    unitedData: [],\n    isLoaded: false,\n    isLoading: false,\n  }\n\n   handleLoad = async() => {\n     this.setState({\n       isLoading: true,\n     });\n\n     const userWithTodo = await getFromServer();\n\n         setTimeout(() => {\n           this.setState({\n             unitedData: userWithTodo,\n             isLoaded: true,\n             isLoading: false,\n       });\n     }, 2000);\n   }\n\n  sortData = (event) => {\n    const {value} = event.target;\n    if (value === 'name') {\n      this.setState({\n        unitedData: this.state.unitedData.sort((a, b) =>\n          String(a.user.name).localeCompare(String(b.user.name))),\n      });\n    }\n    else {\n      this.setState({\n        unitedData: this.state.unitedData.sort((a, b) =>\n          String(a[value]).localeCompare(String(b[value]))),\n      });\n    }\n  };\n\n  render() {\n    if (!this.state.isLoaded) {\n      return (\n        <button\n          type=\"button\"\n          className=\"load-button\"\n          onClick={this.handleLoad}\n          disabled={this.state.isLoading}\n        >\n          {this.state.isLoading ? 'Loading...' : 'Load'}\n        </button>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"App\">\n          <h1 className=\"app-title\">Dynamic list of todos</h1>\n          <select\n            className=\"app-select\"\n            defaultValue=\"this.state.value\"\n            onChange={this.sortData}\n          >\n            <option value=\"\" >Sort by: </option>\n            <option value=\"name\" >User </option>\n            <option value=\"title\" >Title </option>\n            <option value=\"completed\" >Status </option>\n          </select>\n        </div>\n        <TodoList\n          data={this.state.unitedData}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}