{"version":3,"sources":["TodoItem.js","User.js","TodoList.js","Get.js","App.js","index.js"],"names":["TodoItem","_ref","todoData","react_default","a","createElement","className","title","completed","User","userData","name","username","TodoList","data","map","element","src_User","user","key","id","src_TodoItem","getFromServer","Object","asyncToGenerator","regenerator_default","mark","_callee","responseTodos","todos","responseUsers","users","userWithTodo","wrap","_context","prev","next","fetch","sent","json","todo","objectSpread","find","userId","abrupt","stop","apply","this","arguments","App","state","unitedData","isLoaded","isLoading","handleLoad","_this","setState","setTimeout","sortBy","event","value","target","sort","b","String","localeCompare","defaultValue","onChange","src_TodoList","type","onClick","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.dd45cd5e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Styles/TodoItem.css'\n\nconst TodoItem = ({ todoData }) => (\n  <table className=\"todoitem\">\n    <tbody>\n      <tr>\n        <td className=\"todoitem_title\">\n          {todoData.title}\n        </td>\n        </tr>\n        <tr>\n        <td className=\"todoitem_status\">\n          {!todoData.completed ?\n            <span className=\"progress\">\n              IN PROGRESS...\n            </span>\n          : <span className=\"done\">\n              DONE!\n            </span>}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n);\n\nTodoItem.propTypes = {\n  todoData: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Styles/User.css';\n\nconst User = ({ userData }) => (\n  <tr className=\"user\">\n    <td className=\"user_user-name\">{userData.name}</td>\n    <td className=\"user_user-nickname\">\n      (\n      {userData.username}\n      )\n    </td>\n  </tr>\n);\n\nUser.propTypes = {\n  userData: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Styles/TodoList.css';\nimport TodoItem from './TodoItem';\nimport User from './User';\n\nconst TodoList = ({ data }) => (\n  <div className=\"todolist\">\n    <table>\n      <tbody>\n        <tr className=\"todolist-table-headline\">\n          <td className=\"td-headline\">name</td>\n          <td className=\"td-headline\">title</td>\n        </tr>\n      </tbody>\n    </table>\n\n    {data.map(element => (\n      <table className=\"todolist-table\">\n        <tbody>\n          <div className=\"todolist-table\">\n            <td className=\"td-user-component\">\n              <User userData={element.user} key={element.user.id} />\n            </td>\n            <td className=\"td-todoItem-component\">\n              <TodoItem todoData={element} />\n            </td>\n          </div>\n        </tbody>\n      </table>\n    ))}\n    ;\n  </div>\n);\n\nTodoList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","const getFromServer = async() => {\n  const todosUrl = 'https://jsonplaceholder.typicode.com/todos';\n  const responseTodos = await fetch(todosUrl);\n  const todos = await responseTodos.json();\n\n  const usersUrl = 'https://jsonplaceholder.typicode.com/users';\n  const responseUsers = await fetch(usersUrl);\n  const users = await responseUsers.json();\n\n  const userWithTodo = todos.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId),\n  })\n  );\n  return userWithTodo;\n};\n\nexport default getFromServer;\n","import React from 'react';\nimport './Styles/App.css';\nimport TodoList from './TodoList';\nimport getFromServer from './Get';\nclass App extends React.Component {\n  state = {\n    unitedData: [],\n    isLoaded: false,\n    isLoading: false,\n  }\n\n   handleLoad = async() => {\n     this.setState({\n       isLoading: true,\n     });\n\n     const userWithTodo = await getFromServer();\n\n         setTimeout(() => {\n           this.setState({\n             unitedData: userWithTodo,\n             isLoaded: true,\n             isLoading: false,\n       });\n     }, 2000);\n   }\n\n  sortBy = (event) => {\n    const value = event.target.value;\n    if (value === 'name') {\n      this.setState({\n        unitedData: this.state.unitedData.sort((a, b) =>\n          String(a.user.name).localeCompare(String(b.user.name))),\n      });\n    }\n\n    this.setState({\n      unitedData: this.state.unitedData.sort((a, b) =>\n        String(a[value]).localeCompare(String(b[value]))),\n    });\n  };\n\n  render() {\n    if (!this.state.isLoaded) {\n      return (\n        <button\n          type=\"button\"\n          className=\"load-button\"\n          onClick={this.handleLoad}\n        >\n          {this.state.isLoading ? 'Loading...' : 'Load'}\n        </button>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"App\">\n          <h1 className=\"app-title\">Dynamic list of todos</h1>\n          <select\n            className=\"app-select\"\n            defaultValue=\"this.state.value\"\n            onChange={this.sortBy}\n          >\n            <option value=\"\" >Sort by: </option>\n            <option value=\"name\" >User </option>\n            <option value=\"title\" >Title </option>\n            <option value=\"completed\" >Status </option>\n          </select>\n        </div>\n        <TodoList\n          data={this.state.unitedData}\n          key={this.state.unitedData.id}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}